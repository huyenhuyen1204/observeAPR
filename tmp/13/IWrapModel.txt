@@ -20,19 +20,7 @@
  * A marker interface that represents a model that serves as a wrapper for
  * another. Typically these models are produced by the following methods:
  * {@link IComponentAssignedModel#wrapOnAssignment(wicket.Component)} and
- * {@link IInheritanceAware#wrapOnInheritance(wicket.Component)}
- * 
- * <b>Nested Models </b>- IModels can be nested and the innermost model is also
- * known as the "root" model since it is the model on which the outer models
- * rely. The getNestedModel() method on IModel gets any nested model within the
- * given model. This allows Component.sameInnermostModel() to compare two models
- * to see if they both have the same innermost model (the same most nested
- * model).
- * <p>
- * For example, a Form might have a Person model and then a TextField might have
- * a PropertyModel which is the "name" property of the Person model. In this
- * case, PropertyModel will implement getNestedModel(), returning the Person
- * model which is the nested model of the property model.
+ * {@link IComponentInheritedModel#wrapOnInheritance(wicket.Component)}
  * 
  * @author jcompagner
  * @author Igor Vaynberg (ivaynberg)
